function [y1] = Fcn_Red_Qp_6(x1)
%FCN_RED_QP_6 neural network simulation function.
%
% Auto-generated by MATLAB, 06-Sep-2021 10:49:57.
% 
% [y1] = Fcn_Red_Qp_6(x1) takes these arguments:
%   x = 2xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-116.063060960018;-116.229534617895];
x1_step1.gain = [0.00861222819736077;0.00860324037730651];
x1_step1.ymin = -1;

% Layer 1
b1 = [-13.300387244858880464;2.568750350468954835;-5.9218282928947898469;1.7556195133404515207;10.157420518940275755;-1.1184395897465910785;2.1161617370374394831;0.93269188501628796928;0.34421854156181319606;0.47788963900962139197;-0.99177848995829098744;-0.097373855926232530389;0.12988977014750771599;2.0453634542528349449;-0.38061572131410331687;0.97748466214064688717;-1.1995808958114291265;-0.78704700460097487547;-0.66222646121039818734;1.5169062751040269799;-0.72068404161091748072;-0.66089568290995548416;0.78104789871179147731;-0.74538340552285631269;1.394379512773293639;8.6395045398133305525;-1.4844033222416856965;-3.7084690654927490172;11.447284810758880269;1.5081135554905238383];
IW1_1 = [2.6449695608142365089 -10.614622525144397969;-2.1609953452200780788 0.38777709900497048245;4.0199149785033263527 -4.292983015966736815;0.95793033545509709281 -1.573805465077269039;-10.389533621934264218 3.4492655838339598695;0.81078900411585352881 -1.8070152996524722067;-5.0077753088921292957 1.9616422004807811952;-0.97857599182611065824 -1.4654157897776407538;-0.72876443921601097298 -2.7032777910546519351;1.1692904328261282121 -2.3438398804582476487;-0.49188246107095412452 4.3300770927409697464;-2.3298977369134536985 1.1521125220151100521;-1.9116312992598971654 -0.69578794223773199334;-13.149721011174088758 3.1920706227316468784;-3.5719830028104824216 4.5951337110231360583;-0.25600600346102425631 4.2917789450948022889;0.30048294120145846442 -5.0964557631179516761;2.2699086406680586414 -1.458900506359110949;-2.2059647284292034364 -1.6814732553337059517;0.97023258561023306701 2.9361787939962766814;-0.49136444558011310724 -1.7671250081786407105;-1.7104419539952879781 -2.3224847129697314685;2.4186504364760303964 -2.0871533584845760601;-2.5549176067694165937 0.22244141710079937124;2.5308833420044116735 -1.01215938679929085;5.0408703750680636801 -5.0406207942817014001;-2.4933884614635268839 -0.72316962484761415642;-3.581976481875944085 -0.11876145756412281873;8.4857641693185819065 6.6406683098709162749;1.2254132674974551609 1.0080349348474400006];

% Layer 2
b2 = 36.661547175131033782;
LW2_1 = [8.1072256157486144446 -16.099503833621678694 -1.0915124188445020081 -14.792273803425050716 0.10847678221355103179 -14.50828127034357351 -0.18439233737978230621 15.419511138887305179 -5.0043481332587171906 -9.0849756243420838331 0.77987403977092784046 -8.8942748289300190834 -16.734180771900518891 -0.0063387261924721296363 -0.11486107579672814871 -3.444426794104133549 -1.2324327932548329034 5.2033835603100184741 6.4137274656212968083 4.3458709681552001314 10.039818363016747682 5.8703408139546278122 -4.4088299801028858482 11.825126964388136486 9.0375895418505400869 -4.384456325665342824 -11.267367200527401039 -6.1424566051291584756 -0.6751739200207554914 -21.449650760310106534];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.045793148506551;
y1_step1.xoffset = 0.02353331325223;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
